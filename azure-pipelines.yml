# Node.js with webpack
# Build a Node.js project using the webpack CLI.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master
- development

# no PR builds on this file
pr:
- master
- development

pool:
  name: GP IT Futures AKS Build Agents

jobs: 
- job: buildAndTest
  displayName: Build app and run tests
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '12.x'
    displayName: 'Install Node.js'

  - script: |
      npm install -g webpack webpack-cli --save-dev
      npm install
    displayName: 'NPM install'

  - script: |
      npx webpack --config webpack.config.js
    displayName: 'NPX Webpack'

  - script: |
      npm run test
    displayName: 'Unit test'

  - task: PublishTestResults@2
    displayName: Publish unit test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: '$(System.DefaultWorkingDirectory)/unit-test-report.xml'
      testRunTitle: Unit test results
      failTaskOnFailedTests: true
    condition: succeededOrFailed()

  - script: |
      npm run test:integration
    displayName: 'Integration test'

  - task: PublishTestResults@2
    displayName: Publish integration test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: '$(System.DefaultWorkingDirectory)/integration-test-report.xml'
      testRunTitle: Integration test results
      failTaskOnFailedTests: true
    condition: succeededOrFailed()


- job: dockerBuildAndPush
  displayName: Build and push docker containers to the acr
  condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')))
  dependsOn: buildAndTest
  steps:
  - task: DockerInstaller@0
    inputs:
      dockerVersion: '18.09.9'

  - task: DockerCompose@0
    displayName: 'Build: Dev'
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
      azureContainerRegistry: '{"loginServer":"gpitfuturesdevacr.azurecr.io", "id" : "/subscriptions/7b12a8a2-f06f-456f-b6f9-aa2d92e0b2ec/resourceGroups/gpitfutures-dev-rg-acr/providers/Microsoft.ContainerRegistry/registries/gpitfuturesdevacr"}'
      dockerComposeFile: '**/docker-compose.yml'
      action: 'Build services'
      additionalImageTags: '$(Build.BuildNumber)'
      includeSourceTags: true

  - task: DockerCompose@0
    displayName: 'Push: Dev'
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
      azureContainerRegistry: '{"loginServer":"gpitfuturesdevacr.azurecr.io", "id" : "/subscriptions/7b12a8a2-f06f-456f-b6f9-aa2d92e0b2ec/resourceGroups/gpitfutures-dev-rg-acr/providers/Microsoft.ContainerRegistry/registries/gpitfuturesdevacr"}'
      dockerComposeFile: '**/docker-compose.yml'
      action: 'Push services'
      additionalImageTags: '$(Build.BuildNumber)'
      includeSourceTags: true

  - task: DockerCompose@0
    displayName: 'Build: Test'
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
      azureContainerRegistry: '{"loginServer":"gpitfuturestestacr.azurecr.io", "id" : "/subscriptions/7b12a8a2-f06f-456f-b6f9-aa2d92e0b2ec/resourceGroups/gpitfutures-test-rg-acr/providers/Microsoft.ContainerRegistry/registries/gpitfuturestestacr"}'
      dockerComposeFile: '**/docker-compose.yml'
      action: 'Build services'
      additionalImageTags: '$(Build.BuildNumber)'
      includeSourceTags: true

  - task: DockerCompose@0
    displayName: 'Push: Test'
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
      azureContainerRegistry: '{"loginServer":"gpitfuturestestacr.azurecr.io", "id" : "/subscriptions/7b12a8a2-f06f-456f-b6f9-aa2d92e0b2ec/resourceGroups/gpitfutures-test-rg-acr/providers/Microsoft.ContainerRegistry/registries/gpitfuturestestacr"}'
      dockerComposeFile: '**/docker-compose.yml'
      action: 'Push services'
      additionalImageTags: '$(Build.BuildNumber)'
      includeSourceTags: true

  - task: DockerCompose@0
    displayName: 'Build: PreProd'
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
      azureContainerRegistry: '{"loginServer":"gpitfuturespprodacr.azurecr.io", "id" : "/subscriptions/7b12a8a2-f06f-456f-b6f9-aa2d92e0b2ec/resourceGroups/gpitfutures-pprod-rg-acr/providers/Microsoft.ContainerRegistry/registries/gpitfuturespprodacr"}'
      dockerComposeFile: '**/docker-compose.yml'
      action: 'Build services'
      additionalImageTags: '$(Build.BuildNumber)'
      includeSourceTags: true

  - task: DockerCompose@0
    displayName: 'Push: PreProd'
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
      azureContainerRegistry: '{"loginServer":"gpitfuturespprodacr.azurecr.io", "id" : "/subscriptions/7b12a8a2-f06f-456f-b6f9-aa2d92e0b2ec/resourceGroups/gpitfutures-pprod-rg-acr/providers/Microsoft.ContainerRegistry/registries/gpitfuturespprodacr"}'
      dockerComposeFile: '**/docker-compose.yml'
      action: 'Push services'
      additionalImageTags: '$(Build.BuildNumber)'
      includeSourceTags: true

  - task: DockerCompose@0
    displayName: 'Build: Prod'
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'NHSAPP-BuyingCatalogue (Prod)'
      azureContainerRegistry: '{"loginServer":"gpitfuturesprodacr.azurecr.io", "id" : "/subscriptions/d1be8dbc-1a9f-4b7b-ba51-037116110e00/resourceGroups/gpitfutures-prod-rg-acr/providers/Microsoft.ContainerRegistry/registries/gpitfuturesprodacr"}'
      dockerComposeFile: '**/docker-compose.yml'
      action: 'Build services'
      additionalImageTags: '$(Build.BuildNumber)'
      includeSourceTags: true

  - task: DockerCompose@0
    displayName: 'Push: Prod'
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'NHSAPP-BuyingCatalogue (Prod)'
      azureContainerRegistry: '{"loginServer":"gpitfuturesprodacr.azurecr.io", "id" : "/subscriptions/d1be8dbc-1a9f-4b7b-ba51-037116110e00/resourceGroups/gpitfutures-prod-rg-acr/providers/Microsoft.ContainerRegistry/registries/gpitfuturesprodacr"}'
      dockerComposeFile: '**/docker-compose.yml'
      action: 'Push services'
      additionalImageTags: '$(Build.BuildNumber)'
      includeSourceTags: true